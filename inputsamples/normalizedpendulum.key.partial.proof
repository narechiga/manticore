
\functions{
	\external R Sin(R);
}

\schemaVariables{
        \formula #postcondition;
        \formula #safety;

        \program DLFormula #hybridinvariant;
        \program DLProgram #dlprogram;

}

\rules{

HybridCut {
        \find( ==> \[ #dlprogram \] #safety )
        "Invariant holds":
                \replacewith( ==> #dlUniversalClosure( \[#dlprogram\]true, #hybridinvariant -> \[#dlprogram\] (#hybridinvariant), false) );
        "Invariant implies safety":
                \replacewith( ==> #dlUniversalClosure(\[#dlprogram\]true, #hybridinvariant -> #safety, false )); 
        "Remaining states are safe":
                \replacewith( !#hybridinvariant ==> \[ (#dlprogram; ?(! (#hybridinvariant)))* \] #safety )
        \displayname "Hybrid cut"
};

}


\problem{
	
	\[
		R M;
		R M1;
		R x1;
		R x2;
		
		M1 := 1;
	\]
(
	( x1^2 + x2^2 < 100 & M = M1)->
	\[
		{ x1' = x2, x2' = -Sin(x1) - x2 }

	\] (x1^2 + x2^2 < 1000 )
)
}
\proof{
(branch "root"
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "modality_split_right" (formula "1") )
(rule "assignment_to_update_right" (formula "1"))
(rule "imp_right" (formula "1") )
(rule "HybridCut" (formula "2") (inst "#hybridinvariant=( ( ( ( ( 99.5663*( x1^2 ) )+( ( 44.9788*x1 )*x2 ) )+( 89.5837*( x2^2 ) ) )<71.538353 ) & ( ( M=M1 ) & true ) )"))
(branch " Invariant holds"
	(rule "all_right" (formula "2") )
	(builtin "Update Simplification" (formula "2") )
	(rule "all_right" (formula "2") )
	(builtin "Update Simplification" (formula "2") )
	(rule "all_right" (formula "2") )
	(builtin "Update Simplification" (formula "2") )
	(rule "all_right" (formula "2") )
	(rule "imp_right" (formula "2") )
)
(branch " Invariant implies safety"
	(rule "all_right" (formula "2") )
	(builtin "Update Simplification" (formula "2"))
	(rule "all_right" (formula "2") )
	(builtin "Update Simplification" (formula "2"))
	(rule "all_right" (formula "2") )
	(builtin "Update Simplification" (formula "2"))
	(rule "all_right" (formula "2") )
(rule "imp_right" (formula "2") )
(builtin "Eliminate Universal Quantifiers" (quantifierEliminator "Mathematica") )
)
(branch " Remaining states are safe"
   	(builtin "Update Simplification" (formula "1") (nodenum "3279"))
	(rule "simplify_form" (formula "1") )
)
)


